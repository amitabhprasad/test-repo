{
  "service": {
    "version": "1.0.0.0",
    "specVersion": "v3",
    "catalog_metadata": {
      "name": "RabbitMQ Service",
      "description": "RabbitMQ Service based on containers",
      "image": "serviceicon_7.svg",
      "category": "MiddleWare Services",
      "bullets": [],
      "providerDisplayName": "IBM",
      "longDescription": "RabbitMQ Service based on containers",
      "documentationUrl": "",
      "supportUrl": "",
      "bindable": false,
      "updatable": "",
      "systemTags": true
    },
    "tags": [
      {
        "name": "environment",
        "label": "environment",
        "type": "string",
        "immutable": false,
        "hidden": false,
        "required": true,
        "secured": false,
        "description": "Unique identifer added to the provisioned VMs.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Write",
        "options": [
          {
            "label": "Development",
            "value": "dev",
            "default": true
          },
          {
            "label": "Quality Assurance",
            "value": "qa",
            "default": false
          },
          {
            "label": "Production",
            "value": "prod",
            "default": false
          },
          {
            "label": "Test",
            "value": "test",
            "default": false
          }
        ]
      },
      {
        "name": "name",
        "label": "name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "request_group",
        "label": "request_group",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The current context group id of the current user that requested the provisioning of the template. This is important because a user may be part of more than one group and this identifies the context of which group the user made the request.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.group}"
      },
      {
        "name": "request_user",
        "label": "request_user",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "The user id of the current user that requested the provisioning of the template.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.owner}"
      },
      {
        "name": "service_name",
        "label": "service_name",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Name provided for the service instance by the end user at time of request",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.name}"
      },
      {
        "name": "service_identifier",
        "label": "service_identifier",
        "type": "string",
        "immutable": true,
        "hidden": false,
        "required": false,
        "secured": false,
        "description": "Unique identifer generated by ICAM which is mapped to the service instance of the template provisioned.",
        "isSystemTag": true,
        "customtype": "string",
        "permission": "Read-Only",
        "default": "${svc_instance.service_instance_id}"
      }
    ],
    "upgrade_from": [],
    "downgrade_to": [],
    "actions": [
      {
        "type": "provision",
        "name": "Provision",
        "description": "Default action for deployment of service",
        "input_parameters": [
          {
            "name": "rabbitmq-username",
            "label": "rabbitmq-username",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "",
            "view": "create new",
            "editable": true,
            "default": "user"
          },
          {
            "name": "rabbitmq-password",
            "label": "rabbitmq-password",
            "customtype": "password",
            "type": "password",
            "immutable": false,
            "hidden": false,
            "required": false,
            "secured": true,
            "description": "",
            "view": "create new",
            "editable": true,
            "default": "",
            "passbyname": false,
            "dynamicDetails": {},
            "isDynamic": false
          },
          {
            "name": "instance_id",
            "label": "Instance ID",
            "customtype": "string",
            "type": "string",
            "immutable": false,
            "hidden": false,
            "required": true,
            "secured": false,
            "isDynamic": false,
            "editable": true
          }
        ],
        "flow": {
          "conditions": [],
          "templates": [
            {
              "Chechu-OCP-Repo/rabbitmq": {
                "title": "Chechu-OCP-Repo/rabbitmq_8c665c",
                "template_name": "rabbitmq",
                "template_repo": "Chechu-OCP-Repo",
                "version": "5.5.0",
                "id": "chechuoc0b38caa7",
                "template_type": "Helm",
                "template_content_type": "Cloud Pak for Multicloud Management",
                "template_provider": "Cloud Pak for Multicloud Management",
                "instance_name": "",
                "cloud_connection_name": "MCM Connection",
                "template_dataobjects": {},
                "template_params": {
                  "namespace": "rabbitmq-services",
                  "global-imagePullSecrets": "",
                  "global-imageRegistry": "",
                  "image-debug": false,
                  "image-pullPolicy": "IfNotPresent",
                  "image-pullSecrets": "",
                  "image-registry": "docker.io",
                  "image-repository": "bitnami/rabbitmq",
                  "image-tag": "3.7.14",
                  "ingress-annotations": "",
                  "ingress-enabled": false,
                  "ingress-hostName": "",
                  "ingress-path": "/",
                  "ingress-tls": false,
                  "ingress-tlsSecret": "myTlsSecret",
                  "livenessProbe-enabled": true,
                  "livenessProbe-failureThreshold": 6,
                  "livenessProbe-initialDelaySeconds": 120,
                  "livenessProbe-periodSeconds": 30,
                  "livenessProbe-successThreshold": 1,
                  "livenessProbe-timeoutSeconds": 20,
                  "metrics-capabilities": "bert,no_sort",
                  "metrics-enabled": false,
                  "metrics-image-pullPolicy": "IfNotPresent",
                  "metrics-image-pullSecrets": "",
                  "metrics-image-registry": "docker.io",
                  "metrics-image-repository": "kbudde/rabbitmq-exporter",
                  "metrics-image-tag": "v0.29.0",
                  "persistence-accessMode": "ReadWriteOnce",
                  "persistence-enabled": true,
                  "persistence-existingClaim": "",
                  "persistence-path": "/opt/bitnami/rabbitmq/var/lib/rabbitmq",
                  "persistence-size": "8Gi",
                  "persistence-storageClass": "",
                  "podManagementPolicy": "OrderedReady",
                  "priorityClassName": "",
                  "rabbitmq-clustering-address_type": "hostname",
                  "rabbitmq-clustering-k8s_domain": "cluster.local",
                  "rabbitmq-configuration": "## Clustering\ncluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s\ncluster_formation.k8s.host = kubernetes.default.svc.cluster.local\ncluster_formation.node_cleanup.interval = 10\ncluster_formation.node_cleanup.only_log_warning = true\ncluster_partition_handling = autoheal\n# queue master locator\nqueue_master_locator=min-masters\n# enable guest user\nloopback_users.guest = false",
                  "rabbitmq-erlangCookie": "",
                  "rabbitmq-existingErlangSecret": "",
                  "rabbitmq-existingPasswordSecret": "",
                  "rabbitmq-extraConfiguration": "#disk_free_limit.absolute = 50MB\n#management.load_definitions = /app/load_definition.json",
                  "rabbitmq-extraPlugins": "",
                  "rabbitmq-loadDefinition-enabled": false,
                  "rabbitmq-loadDefinition-secretName": "load-definition",
                  "rabbitmq-logs": "-",
                  "rabbitmq-maxAvailableSchedulers": 2,
                  "rabbitmq-onlineSchedulers": 1,
                  "rabbitmq-password": "${input_parameters.rabbitmq-password}",
                  "rabbitmq-plugins": "rabbitmq_management rabbitmq_peer_discovery_k8s",
                  "rabbitmq-rabbitmqClusterNodeName": "",
                  "rabbitmq-ulimitNofiles": "65536",
                  "rabbitmq-username": "${input_parameters.rabbitmq-username}",
                  "rbacEnabled": true,
                  "readinessProbe-enabled": true,
                  "readinessProbe-failureThreshold": 3,
                  "readinessProbe-initialDelaySeconds": 10,
                  "readinessProbe-periodSeconds": 30,
                  "readinessProbe-successThreshold": 1,
                  "readinessProbe-timeoutSeconds": 20,
                  "replicas": 1,
                  "route-amqp": "amqp-${input_parameters.instance_id}.apps.cp4mcm.chechu.me",
                  "route-mngmnt": "mngmnt-${input_parameters.instance_id}.apps.cp4mcm.chechu.me",
                  "securityContext-enabled": false,
                  "securityContext-fsGroup": 1001,
                  "securityContext-runAsUser": 1001,
                  "service-annotations": "",
                  "service-distPort": 25672,
                  "service-loadBalancerSourceRanges": "",
                  "service-managerPort": 15672,
                  "service-nodePort": 30672,
                  "service-port": 5672,
                  "service-type": "ClusterIP",
                  "updateStrategy-type": "RollingUpdate",
                  "volumePermissions-enabled": false,
                  "volumePermissions-image-pullPolicy": "IfNotPresent",
                  "volumePermissions-image-pullSecrets": "",
                  "volumePermissions-image-registry": "docker.io",
                  "volumePermissions-image-repository": "bitnami/minideb",
                  "volumePermissions-image-tag": "latest",
                  "metrics-annotations-prometheus.io/port": "9090",
                  "metrics-annotations-prometheus.io/scrape": "true"
                },
                "outputs": [],
                "editable": true,
                "template_data_objects": {},
                "isErrorFlow": false
              }
            }
          ],
          "resthooks": [],
          "notifications": [
            {
              "emailnotification": {
                "title": "emailnotification_5b4a98",
                "type": "email",
                "receiverList": "jesus.arteche@ie.ibm.com",
                "id": "emailnotac57ba7d",
                "sender": "CAMadmin",
                "copyToList": "",
                "subject": "RabbitMQ Service Ready ${input_parameters.instance_id}",
                "body": "Management DashBoard - mngmnt-${input_parameters.instance_id}.apps.cp4mcm.chechu.me\nAMQP DashBoard - amqp-${input_parameters.instance_id}.apps.cp4mcm.chechu.me\nUsername - ${input_parameters.rabbitmq-username}\nPassword - ${input_parameters.rabbitmq-password}",
                "editable": true
              }
            }
          ],
          "sequence": {
            "0": "chechuoc0b38caa7",
            "1": "emailnotac57ba7d"
          },
          "error_sequence": {}
        },
        "output_parameters": [
          {
            "name": "rabbit-user",
            "label": "RabbitMQ username",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "RabbitMQ username",
            "default": "${input_parameters.rabbitmq-username}"
          },
          {
            "name": "rabbit-password",
            "label": "RabbitMQ password",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "RabbitMQ password",
            "default": "${input_parameters.rabbitmq-password}"
          },
          {
            "name": "rabbit-management-endpoint",
            "label": "Rabbit MQ Management Endpoint",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Rabbit MQ Management Endpoint",
            "default": "mngmnt-${input_parameters.instance_id}.apps.cp4mcm.chechu.me"
          },
          {
            "name": "rabbit-amqp-endpoint",
            "label": "Rabbit MQ AMQP Endpoint",
            "customtype": "string",
            "type": "string",
            "immutable": true,
            "hidden": false,
            "required": false,
            "secured": false,
            "description": "Rabbit MQ AMQP Endpoint",
            "default": "amqp-${input_parameters.instance_id}.apps.cp4mcm.chechu.me"
          }
        ]
      }
    ],
    "plans": [
      {
        "name": "Standard",
        "description": "To deploy a Standard plan",
        "actions": [],
        "plan_parameters": []
      }
    ]
  }
}